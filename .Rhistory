face <- sample(1:6, 1)
face
face <- as.data.frame(value = sample(1:6, 1))
face <- data.frame(value = sample(1:6, 1))
face
die <- data.frame(face = sample(1:6, 1))
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text()
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text()+
theme_void()+
coord_equal()
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text()+
scale_x_continuous(expand = c(0, 0.5))+
scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal()
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
scale_x_continuous(expand = c(0, 0.5))+
scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal()
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
#scale_x_continuous(expand = c(0, 0.5))+
#scale_y_continuous(expand = c(0, 0.5))+
theme_void(expand = FALSE)+
coord_equal()
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
#scale_x_continuous(expand = c(0, 0.5))+
#scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal(expand = FALSE)
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
#scale_x_continuous(expand = c(0, 0.5))+
#scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal(expand = FALSE)
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
scale_x_continuous(expand = c(0, 0.5))+
scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal()
die <- data.frame(face = sample(1:6, 1))
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
scale_x_continuous(expand = c(0, 0.5))+
scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal()
die <- data.frame(face = sample(1:6, 1))
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
scale_x_continuous(expand = c(0, 0.5))+
scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal()
ggsave(paste0("content/authors/", person, ".jpg"), width = 100, height = 100)
person <- "mkeighron"
paste0("content/authors/", person, "/avatar.jpg")
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
scale_x_continuous(expand = c(0, 0.5))+
scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal()
ggsave(paste0("content/authors/", person, "/avatar.jpg"), width = 100, height = 100)
?ggsave
100/72
ggsave(paste0("content/authors/", person, "/avatar.jpg"),
width = 2, height = 2, units = "in")
ggsave(paste0("content/authors/", person, "/avatar.jpg"),
width = 4, height = 4, units = "in")
ggsave(paste0("content/authors/", person, "/avatar.jpg"),
width = 3.5, height = 3.5, units = "in")
ggsave(paste0("content/authors/", person, "/avatar.jpg"),
width = 3.25, height = 3.25, units = "in")
blogdown:::serve_site()
250*7
250*7+800
install.packages(c("e1071", "gstat", "latex2exp", "renv", "spatstat.linnet", "stars"), lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
5.99/150.36
blogdown:::serve_site()
87500/12
55937.36/12
95600/12
18700/12
?tidybayes::gather_draws
library(dplyr)
library(ggplot2)
data(RankCorr, package = "ggdist")
RankCorr %>%
spread_draws(b[i, j])
library(tidybayes)
library(dplyr)
library(ggplot2)
data(RankCorr, package = "ggdist")
RankCorr %>%
spread_draws(b[i, j])
RankCorr
View(RankCorr)
RankCorr[[1]]
library(brms)
?brm
prior1 <- prior(normal(0,10), class = b) +
prior(cauchy(0,2), class = sd)
fit1 <- brm(count ~ zAge + zBase * Trt + (1|patient),
data = epilepsy, family = poisson(), prior = prior1)
library(rstanarm)
?rstanarm
?stan_glm.nb
fit6 <- stan_glm.nb(
Days ~ Sex/(Age + Eth*Lrn),
data = MASS::quine,
link = "log",
prior_aux = exponential(1.5, autoscale=TRUE),
chains = 2, iter = 200, # for speed of example only
refresh = 0
)
fit6
MASS::quine
rstanarm::get_x()
rstanarm::get_x(fit6)
rstanarm::get_z(fit6)
gather_draws(fit6, "b")
gather_draws(fit6, b)
gather_draws(fit6, b[])
gather_draws(fit6, b[i])
?gather_draws
?rstanarm
fit6
get_variables(fit6)
gather_draws(fit6, "SexM")
gather_draws(fit6, SexM)
gather_draws(fit6, unquo("SexM"))
?unquote
gather_draws(fit6, !!"SexM")
library(tidyverse)
gather_draws(fit6, !!"SexM")
library(rlang)
gather_draws(fit6, !!"SexM")
x <- "SexM"
gather_draws(fit6, !!x)
gather_draws(fit6, get(x))
gather_draws(fit6, !!get(x))
gather_draws(fit6, !!!x)
gather_draws(fit6, !!!"SexM")
gather_draws(fit6, !!)
?`!!`
gather_draws(fit6, 1)
?gather_draws
fixef(fit6)
?fixef
library(broom.mixed)
tidy(fit6)
?tidy
?tidy.stanreg
install.packages(c("Rage", "Rcompadre"))
install.packages(c("BiocManager", "boot", "class", "colorspace", "corrplot", "curl", "dendextend", "DEoptim", "devtools", "dplyr", "ellipsis", "ggeffects", "gh", "gifski", "httpuv", "huxtable", "insight", "jquerylib", "KernSmooth", "lattice", "magick", "MASS", "Matrix", "nnet", "openssl", "parallelly", "pdftools", "phangorn", "processx", "R.cache", "raster", "rasterVis", "rbibutils", "RcppParallel", "reticulate", "rJava", "rlang", "rmarkdown", "rpf", "scholar", "spatial", "terra", "tidyselect", "V8", "vctrs"), lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
remove.packages("Rage", lib="~/Library/R/4.0/library")
remove.packages("Rcompadre", lib="~/Library/R/4.0/library")
install.packages("RCompadre", "Rage")
install.packages(c("RCompadre", "Rage"), lib = .libPaths()[2])
install.packages("USAboundariesData", lib = .libPaths()[2])
devtools::install_github("ropensci/USAboundariesData")
remove.packages("USAboundariesData", lib="~/Library/R/4.0/library")
devtools::install_github("ropensci/USAboundariesData", lib = .libPaths()[2])
install.packages(c("BiocManager", "KFAS", "stringi"), lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
blogdown:::serve_site()
# Generate generic avatar
library(tidyverse)
library(extrafont)
loadfonts()
# person <- "[first initial][lastname]"
person <- "epeabody"
die <- data.frame(face = sample(1:6, 1))
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
scale_x_continuous(expand = c(0, 0.5))+
scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal()
ggsave(paste0("content/authors/", person, "/avatar.jpg"),
width = 3.25, height = 3.25, units = "in")
# person <- "[first initial][lastname]"
person <- "handerson"
die <- data.frame(face = sample(1:6, 1))
ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
scale_x_continuous(expand = c(0, 0.5))+
scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal()
ggsave(paste0("content/authors/", person, "/avatar.jpg"),
width = 3.25, height = 3.25, units = "in")
blogdown:::serve_site()
# Generate generic avatar
library(tidyverse)
library(extrafont)
loadfonts()
# person <- "[first initial][lastname]"
person <- "mzeh"
die <- data.frame(face = sample(1:6, 1))
plt <- ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
scale_x_continuous(expand = c(0, 0.5))+
scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal()
plt
die <- data.frame(face = sample(1:6, 1))
plt <- ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
scale_x_continuous(expand = c(0, 0.5))+
scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal()
plt
ggsave(filename = paste0("content/authors/", person, "/avatar.jpg"),
plot = plt, device = "jpeg",
width = 3.25, height = 3.25, units = "in")
# Generate generic avatar
library(tidyverse)
library(extrafont)
loadfonts()
# person <- "[first initial][lastname]"
person <- "mzeh"
die <- data.frame(face = sample(1:6, 1))
plt <- ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
scale_x_continuous(expand = c(0, 0.5))+
scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal()
plt
ggsave(filename = paste0("content/authors/", person, "/avatar.jpg"),
plot = plt, device = "jpeg",
width = 3.25, height = 3.25, units = "in")
ggsave(filename = paste0("content/authors/", person, "/avatar.jpg"),
plot = plt,
width = 3.25, height = 3.25, units = "in")
jpeg(filename = paste0("content/authors/", person, "/avatar.jpg"),
width = 3.25, height = 3.25, units = "in")
plt
dev.off()
jpeg(filename = paste0("content/authors/", person, "/avatar.jpg"),
width = 3.25, height = 3.25, units = "in", res = 300)
plt
dev.off()
blogdown:::serve_site()
2021-2014
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
# Generate generic avatar
library(tidyverse)
library(extrafont)
loadfonts()
die <- data.frame(face = sample(1:6, 1))
die
die <- data.frame(face = sample(1:6, 1))
die
die <- data.frame(face = sample(1:6, 1))
die
plt <- ggplot(data = die, aes(x = 0, y = 0, label = face))+
geom_text(family = "Dice", size = 80)+
scale_x_continuous(expand = c(0, 0.5))+
scale_y_continuous(expand = c(0, 0.5))+
theme_void()+
coord_equal()
plt
ggsave("~/Downloads/dice.png", width = 3.25, height = 3.25, units = "in")
ggsave("~/Downloads/dice.png", width = 3.5, height = 3.5, units = "in")
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
2021-1968
40*25
blogdown:::serve_site()
install.packages("blogdown")
blogdown:::serve_site()
library(StanHeaders)
example(stanFunction, package = "StanHeaders", run.dontrun = TRUE)
StanHeaders::CxxFlags()
StanHeaders:::CxxFlags()
detach("package:StanHeaders", unload = TRUE)
remove.packages("StanHeaders")
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXX14FLAGS += -O3 -mtune=native -arch x86_64 -ftemplate-depth-256",
file = M, sep = "\n", append = FALSE)
install.packages("StanHeaders")
library(StanHeaders)
StanHeaders:::CxxFlags()
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXX14FLAGS += -O3 -mtune=native -arch x86_64 -ftemplate-depth-256",
file = M, sep = "\n", append = FALSE)
M
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
example(stan_model, package = "rstan", run.dontrun = TRUE)
??compileCode
getAnywhere("compileCode")
inline:::compileCode
?inline:::compileCode
example(stan_model, package = "rstan", run.dontrun = TRUE)
detach("package:rstan", unload = TRUE)
detach("package:StanHeaders", unload = TRUE)
remove.packages("rstan")
install.packages("rstan", type = "source", , repos = "https://cloud.r-project.org/", dependencies = TRUE)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
Sys.setenv(DOWNLOAD_STATIC_LIBV8 = 1) # only necessary for Linux without the nodejs library / headers
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
example(stan_model, package = "rstan", run.dontrun = TRUE)
?brms
prior1 <- prior(normal(0,10), class = b) +
prior(cauchy(0,2), class = sd)
fit1 <- brm(count ~ zAge + zBase * Trt + (1|patient),
data = epilepsy, family = poisson(), prior = prior1)
# generate a summary of the results
summary(fit1)
library(brms)
library(rstanarm)
?rstanarm
R.version$platform
mtcars$mpg10 <- mtcars$mpg / 10
fit <- stan_glm(
mpg10 ~ wt + cyl + am,
data = mtcars,
QR = TRUE,
# for speed of example only (default is "sampling")
algorithm = "fullrank",
refresh = 0
)
fit
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
Sys.setenv(DOWNLOAD_STATIC_LIBV8 = 1) # only necessary for Linux without the nodejs library / headers
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
example(stan_model, package = "rstan", run.dontrun = TRUE)
version()
R.version
R.version$arch
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
arch <- ifelse(R.version$arch == "aarch64", "arm64e", "x86_64")
arch
paste("\nCXX14FLAGS += -O3 -mtune=native -arch", arch, "-ftemplate-depth-256")
install.packages("testthat")
install.packages("microclima")
remotes::install_github("ilyamaclean/microclima")
library(microclima)
?microclima
15*6.95
library(brms)
fit <- brm(count ~ zAge + zBase * Trt + (1 | patient),
data = epilepsy, family = poisson())
## plot all marginal effects
plot(marginal_effects(fit), ask = FALSE)
me <- marginal_effects(fit, "zBase:Trt")
me
me <- conditional_effects(fit, "zBase:Trt")
me
str(me)
me$`zBase:Trt`
me <- conditional_effects(fit, "zBase:Trt", spaghetti = TRUE)
me
me$`zBase:Trt`
me+facet_wrap(~Trt)
library(ggplot2)
me+facet_wrap(~Trt)
plot(me)+facet_wrap(~Trt)
plot(me, plot = FALSE)[[1]]+facet_wrap(~Trt)
fit3way <- brm(count ~ zAge * zBase * Trt, data = epilepsy)
conditions <- make_conditions(fit3way, "zAge")
conditional_effects(fit3way, "zBase:Trt", conditions = conditions)
## only include points close to the specified values of zAge
me <- conditional_effects(
fit3way, "zBase:Trt", conditions = conditions,
select_points = 0.1
)
plot(me, points = TRUE)
2021-2012
library(rstanarm)
model <- stan_glm(
mpg ~ wt + gear,
data = mtcars,
chains = 2,
iter = 200,
refresh = 0
)
rope_range(model)
model <- stan_glm(
mpg ~ wt + gear,
data = mtcars,
chains = 4,
refresh = 0
)
rope_range(model)
library(bayestestR)
model <- stan_glm(
mpg ~ wt + gear,
data = mtcars,
chains = 4,
refresh = 0
)
rope_range(model)
rope(model)
?rope
rope(model, ci = seq(0.1, 0.9, by = 0.1))
str(rope(model, ci = seq(0.1, 0.9, by = 0.1)))
library(tidyver)
library(tidyverse)
rope(model, ci = seq(0.1, 0.9, by = 0.1))
as_tibble(rope(model, ci = seq(0.1, 0.9, by = 0.1)))
as_tibble(rope(model, ci = seq(0.01, 0.99, by = 0.01)))
as_tibble(rope(model, ci = seq(0.01, 0.99, by = 0.01))) %>%
ggplot(aes(x = CI, y = ROPE_Percentage))+
geom_line()+
facet_wrap(~Parameter)
as_tibble(rope(model, ci = seq(0.01, 0.99, by = 0.01))) %>%
ggplot(aes(x = CI, y = ROPE_Percentage))+
geom_line()+
facet_wrap(~Parameter, scales = "free_y")
?rope
as_tibble(rope(model, ci = seq(0.01, 0.99, by = 0.01))) %>%
ggplot(aes(x = CI, y = ROPE_Percentage))+
geom_line()+
scale_y_continuous(limits = 0:1, expand = c(0, 0))+
facet_wrap(~Parameter)
as_tibble(rope(model, ci = seq(0.01, 0.99, by = 0.01))) %>%
ggplot(aes(x = CI, y = ROPE_Percentage))+
geom_line(color = "blue")+
scale_y_continuous(limits = 0:1, expand = c(0, 0))+
facet_wrap(~Parameter)
as_tibble(rope(model, ci = seq(0.01, 0.99, by = 0.01))) %>%
ggplot(aes(x = CI, y = ROPE_Percentage))+
geom_line(color = "blue")+
scale_y_continuous(limits = 0:1, expand = c(0, 0))+
facet_wrap(~Parameter)+
theme_bw()
model
model <- update(model, iter = 10000)
as_tibble(rope(model, ci = seq(0.01, 0.99, by = 0.01))) %>%
ggplot(aes(x = CI, y = ROPE_Percentage))+
geom_line(color = "blue")+
scale_y_continuous(limits = 0:1, expand = c(0, 0))+
facet_wrap(~Parameter)+
theme_bw()
as_tibble(rope(model, ci = seq(0.01, 0.99, by = 0.01), ci_method = "ETI")) %>%
ggplot(aes(x = CI, y = ROPE_Percentage))+
geom_line(color = "blue")+
scale_y_continuous(limits = 0:1, expand = c(0, 0))+
facet_wrap(~Parameter)+
theme_bw()
as_tibble(rope(model, ci = seq(0.01, 0.99, by = 0.01), ci_method = "HDI")) %>%
ggplot(aes(x = CI, y = ROPE_Percentage))+
geom_line(color = "blue")+
scale_y_continuous(limits = 0:1, expand = c(0, 0))+
facet_wrap(~Parameter)+
theme_bw()
as_tibble(rope(model, ci = seq(0.01, 0.99, by = 0.01), ci_method = "HDI")) %>%
ggplot(aes(x = CI, y = ROPE_Percentage))+
geom_line(color = "blue")+
scale_y_continuous(limits = 0:1, expand = c(0, 0))+
facet_wrap(~Parameter)+
theme_bw()
as_tibble(rope(model, ci = seq(0.001, 0.999, by = 0.001), ci_method = "HDI")) %>%
ggplot(aes(x = CI, y = ROPE_Percentage))+
geom_line(color = "blue")+
scale_y_continuous(limits = 0:1, expand = c(0, 0))+
facet_wrap(~Parameter)+
theme_bw()
as_tibble(rope(model, ci = seq(0.5, 0.999, by = 0.001), ci_method = "HDI")) %>%
ggplot(aes(x = CI, y = ROPE_Percentage))+
geom_line(color = "blue")+
scale_y_continuous(limits = 0:1, expand = c(0, 0))+
facet_wrap(~Parameter)+
theme_bw()
as_tibble(rope(model, ci = seq(0.5, 0.99, by = 0.01), ci_method = "HDI")) %>%
ggplot(aes(x = CI, y = ROPE_Percentage))+
geom_line(color = "blue")+
scale_y_continuous(limits = 0:1, expand = c(0, 0))+
facet_wrap(~Parameter)+
theme_bw()
install.packages(c("glue", "raster", "rasterVis", "spacetime"))
?rstanarm::stan_glm
11*40*50
11*40*52
20*8*50
20*8*7*50
cos(pi)
cos(pi/2)
install.packages(c("DiagrammeR", "latex2exp", "RcppArmadillo", "renv", "rpart"))
